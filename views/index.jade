extends layout

block content
  h1= title
  div
    textarea#log(cols="80" rows="20")
  script(src="/socket.io/socket.io.js")
  script(src="/javascripts/jquery.min.js")
  script(src="/javascripts/responsiveVoice.js")
  script.
    var tick = new Audio('/audio/tic.wav');
    var airplane = new Audio('/audio/airplane.wav');
    var bird = new Audio('/audio/bird.wav');
    var cat = new Audio('/audio/cat.wav');
    var duck = new Audio('/audio/duck.wav');
    var elephant = new Audio('/audio/elephant.wav');
    var frog = new Audio('/audio/frog.wav');
    var goose = new Audio('/audio/goose.wav');
    var insect = new Audio('/audio/insect.wav');
    var jackhammer = new Audio('/audio/jackhammer.wav');
    var loon = new Audio('/audio/loon.wav');
    var monkey = new Audio('/audio/monkey.wav');
    var rooster = new Audio('/audio/rooster.wav');
    var ship = new Audio('/audio/ship.wav');
    var turkey = new Audio('/audio/turkey.wav');
    var uboat = new Audio('/audio/uboat.wav');
    var ack = new Audio('/audio/SB.wav');
    var socket = io();

    socket.on('connect', function(){});

    socket.on('httpServer', function (data) {
      if(typeof data.voice == "string") {
        responsiveVoice.speak(data.text, data.voice);
        socket.emit('silent');
      } else if(!responsiveVoice.isPlaying()) {
        play(data);
        socket.emit('silent');
      } else {
        socket.emit('playing');
      }
    });

    socket.on('disconnect', function(){});

    function play(data) {
      switch(data) {
        case "Tick":
          tick.play();
          break;
        case "Airplane":
          airplane.play();
          break;
        case "Bird":
          bird.play();
          break;
        case "Cat":
          cat.play();
          break;
        case "Duck":
          duck.play();
          break;
        case "Elephant":
          elephant.play();
          break;
        case "Frog":
          frog.play();
          break;
        case "Goose":
          goose.play();
          break;
        case "Insect":
          insect.play();
          break;
        case "Jackhammer":
          jackhammer.play();
          break;
        case "Loon":
          loon.play();
          break;
        case "Monkey":
          monkey.play();
          break;
        case "Rooster":
          rooster.play();
          break;
        case "Ship":
          ship.play();
          break;
        case "Turkey":
          turkey.play();
          break;
        case "U-boat":
          uboat.play();
          break;
        case "Acknowledge":
          ack.play();
          break;
        default:
          responsiveVoice.speak(data);
      }

      var dateTime = new Date();
      console.log("Date and data: ",formatDatetime(dateTime)," - ",data);
      $( "#log" ).prepend(formatDatetime(dateTime)+" - "+data+"\n");
    }

    function formatDatetime(date) {
      var dateOut = new Date(date);
      var monthOut = ('0'+(dateOut.getMonth()+1)).slice(-2);
      console.log("dateOut.getMonth(): ",dateOut.getMonth()," monthOut: ",monthOut);
      var dayOut = ('0'+dateOut.getDate()).slice(-2);
      var yearOut = dateOut.getFullYear();
      var hoursOut = ('0'+dateOut.getHours()).slice(-2);
      var minsOut = ('0'+dateOut.getMinutes()).slice(-2);
      var secsOut = ('0'+dateOut.getSeconds()).slice(-2);
      var timeOut = monthOut+'-'+dayOut+'-'+yearOut+' '+hoursOut+':'+minsOut+':'+secsOut;

      return timeOut;
    }